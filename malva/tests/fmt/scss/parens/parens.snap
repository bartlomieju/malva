---
source: malva/tests/fmt.rs
---
a {
  box-shadow: inset 0 $size $size (-$size) black;
  width: calc(100% - (#{var(--g-spacing)} - #{$iframe-x-padding}) * 2);
  padding-right: (100% * $info-width / (1 - $image-width));
  padding-bottom: (
    100% * $image-height /
      ($image-width-responsive + $image-margin-responsive * 2)
  );
}

.foo {
  --paddingC: calc(var(--widthB) / 2);
  content: attr(data-title);
  color: var(--main-bg-color);
  background-color: rgb(255, 0, 0);
  background: element(#css-source);
  width: calc(100% - (#{var(--g-spacing)} - #{$iframe-x-padding}) * 2);
  padding-bottom: (
    100% * $image-height /
      ($image-width-responsive + $image-margin-responsive * 2)
  );
  padding-top: var(--paddingC);
  margin: 1 * 1 (1) * 1 1 * (1) (1) * (1);
  prop: -1 * -1 - (-1) * -1 -1 * -(-1) - (-1) * -(-1);
  prop1: #{($m) * (10)};
  prop2: #{$m * 10};
  prop3: #{-(-$m) * -(-10)};
  prop4: +1;
  prop5: -1;
  prop6: word + 1; /* word1 */
  prop7: word - 1; /* word-1 */
  prop8: +1 + 1 + 1 + 1; /* +1 +1 +1 +1 */
  prop9: -1 -1 -1 -1; /* -1 -1 -1 -1 */
  prop10: (-1);
  prop11: (+1);
  prop12: 10px/8px;
  prop13: round(1.5) / 2 round(1.5) / 2 round(1.5) / 2 round(1.5) / 2;
  prop14: 2/round(1.5) 2 / round(1.5) 2/round(1.5) 2 / round(1.5);
  prop15: (round(1.5) / 2) (round(1.5) / 2) (round(1.5) / 2) (round(1.5) / 2);
  prop16: (2 / round(1.5)) (2 / round(1.5)) (2 / round(1.5)) (2 / round(1.5));
  prop17: $width / 2 $width / 2 $width / 2 $width / 2;
  prop18: 2/$width 2 / $width 2/$width 2 / $width;
  prop19: ($width / 2) ($width / 2) ($width / 2) ($width / 2);
  prop20: (2 / $width) (2 / $width) (2 / $width) (2 / $width);
  prop25-1: #{$width}/#{$width} #{$width} / #{$width} #{$width}/#{$width}
    #{$width} / #{$width};
  prop25-2: #{$width} * #{$width} #{$width} * #{$width} #{$width} * #{$width}
    #{$width} * #{$width};
  prop25-3: #{$width} + #{$width} #{$width} + #{$width} #{$width} + #{$width}
    #{$width} + #{$width};
  prop25-4: #{$width}-#{$width} #{$width} -#{$width} #{$width}- #{$width}
    #{$width} - #{$width};
  prop26: 8px/2px 8px / 1 1/2px 1 / 2;
  prop27: 8px/2px 8px/1 1/2px 1/2;
  prop28: 8px / 2px 8px / 1 1 / 2px 1 / 2;
  prop29: (8px / 2px) (8px / 1) (1 / 2px) (1 / 2);
  prop30: (8px / 2px) (8px / 1) (1 / 2px) (1 / 2);
  prop31: (#{$width} / 2px) (8px / #{$width}) (#{$width} / 2px) (
    8px / #{$width}
  );
  prop32: func(8px / 2);
  prop33: 5px + 8px/2px;
  prop34: func(+20px, +20px);
  prop35: 1 + 1 + 1 + 1;
  prop36: 1 + 1 + 1 + 1;
  prop37: 1 + 1 1 + 1;
  prop38: ++1;
  prop39: +(+1);
  prop40: --1;
  prop41: --(1);
  prop42: 1px + 1px + 1px + 1px;
  prop43: 1px + 1px + 1px + 1px;
  prop44: -1 + -1 - (-1) + -1 -1 + -(-1) - (-1) + -(-1);
  prop45: round(1.5) * 2 round(1.5) * 2 round(1.5) * 2 round(1.5) * 2;
  prop46: 2 * round(1.5) 2 * round(1.5) 2 * round(1.5) 2 * round(1.5);
  prop47: (round(1.5) * 2) (round(1.5) * 2) (round(1.5) * 2) (round(1.5) * 2);
  prop48: (2 * round(1.5)) (2 * round(1.5)) (2 * round(1.5)) (2 * round(1.5));
  prop49: $width * 2 $width * 2 $width * 2 $width * 2;
  prop50: 2 * $width 2 * $width 2 * $width 2 * $width;
  prop51: ($width * 2) ($width * 2) ($width * 2) ($width * 2);
  prop52: (2 * $width) (2 * $width) (2 * $width) (2 * $width);
  prop57: round(1.5) + 2 round(1.5) + 2 round(1.5) + 2 round(1.5) + 2;
  prop58: 2 + round(1.5) 2 + round(1.5) 2 + round(1.5) 2 + round(1.5);
  prop59: (round(1.5) + 2) (round(1.5) + 2) (round(1.5) + 2) (round(1.5) + 2);
  prop60: (2 + round(1.5)) (2 + round(1.5)) (2 + round(1.5)) (2 + round(1.5));
  prop61: $width + 2 $width + 2 $width + 2 $width + 2;
  prop62: 2 + $width 2 + $width 2 + $width 2 + $width;
  prop63: ($width + 2) ($width + 2) ($width + 2) ($width + 2);
  prop64: (2 + $width) (2 + $width) (2 + $width) (2 + $width);
  prop69: "test" + 1 "test" + 1 "test" + 1 "test" + 1;
  prop70: 1 + "test" 1 + "test" 1 + "test" 1 + "test";
  prop71: "test" - 1 "test" -1 "test" - 1 "test" - 1;
  prop72: 1 - "test" 1 - "test" 1 - "test" 1 - "test";
  prop73: calc(100% * 2px) calc(100% * 2px) calc(100% * 2px) calc(100% * 2px);
  prop74: calc(100% / 2px) calc(100% / 2px) calc(100% / 2px) calc(100% / 2px);
  prop75: calc(100% +2px) calc(100% +2px) calc(100% + 2px) calc(100% + 2px);
  prop76: calc(100% -2px) calc(100% -2px) calc(100% - 2px) calc(100% - 2px);
  prop77: calc(-5px);
  prop78: calc(+5px);
  prop79: calc(-100px + 100px);
  prop80: calc(+100px + 100px);
  prop81: calc(100px - 100px);
  prop82: calc(100px + 100px);
}

